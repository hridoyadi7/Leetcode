    bool canThreePartsEqualSum(vector<int>& A) {
        int n=A.size();
        int arr[n];
        arr[0]=A[0];
        for(int i=1;i<n;i++)
            arr[i]=arr[i-1]+A[i];
        if(arr[n-1]%3!=0)
            return false;
        int first=arr[n-1]/3;
        int second=first*2;
        int flag1=0,flag2=0;
        for(int i=0;i<n-1;i++){
            if(arr[i]==first && flag1==0)
                flag1=1;
           else if(arr[i]==second && flag1==1)
                flag2=1;
        }
        
        if(flag1==1 && flag2==1)
            return true;
        else
            return false;
            
    }
    
    Time:O(n)
    ----------------------------------------------------------------------------------------------------
    
     bool canThreePartsEqualSum(vector<int>& A) {
        int n=A.size();
        int sum=0;
        for(int i=0;i<n;i++)
            sum+=A[i];
        if(sum%3!=0)
            return false;
        int count=0;
        sum=sum/3;
        int currsum=0;
        for(int i=0;i<n;i++){
            currsum+=A[i];
            if(currsum==sum)
            {
                currsum=0;
                count++;
            }
        }
        if(count>=3)
            return true;
        else
            return false;
    }
    Time:O(n)
